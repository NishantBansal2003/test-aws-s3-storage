name: CI

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]
    types: [opened, synchronize, reopened, labeled]

jobs:
  format:
    name: Check Format and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Go
        id: setup
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.9"

      - name: Check gofmt
        run: |
          fmt_result=$(gofmt -l .)
          if [ -n "$fmt_result" ]; then
            echo "The following files need to be formatted:"
            echo "$fmt_result"
            exit 1
          fi

      - name: Check golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  build:
    name: Build go-continuous-fuzz project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Go
        id: setup
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.9"

      - name: Set up Go environment variables
        run: |
          echo "export PATH=\$PATH:$(go env GOPATH)/bin" >> $GITHUB_ENV

      - name: Install dependencies
        run: go mod download

      - name: Build the project
        run: make build

  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      contains(github.event.pull_request.labels.*.name, 'safe-to-test')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Go
        id: setup
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.9"

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make unit-test

